<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Installation on Crunchy Data PostgreSQL Operator Documentation</title>
    <link>https://crunchydata.github.io/postgres-operator/latest/installation/</link>
    <description>Recent content in Installation on Crunchy Data PostgreSQL Operator Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Apr 2018 18:27:02 -0700</lastBuildDate>
    
	<atom:link href="https://crunchydata.github.io/postgres-operator/latest/installation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quick Installation</title>
      <link>https://crunchydata.github.io/postgres-operator/latest/installation/quick-installation/</link>
      <pubDate>Thu, 26 Apr 2018 15:22:14 -0700</pubDate>
      
      <guid>https://crunchydata.github.io/postgres-operator/latest/installation/quick-installation/</guid>
      <description>Table of Contents Overview Quickstart GKE/PKS Openshift Container Platform   Next Steps   Latest Release: 3.4.0 2018-11-14
 Overview There are currently quickstart script that seek to automate the deployment to popular Kubernetes environments -
   quickstart.sh
   The quickstart script will deploy the operator to a GKE Kube cluster or an Openshift Container Platform cluster.
 The script assumes you have a StorageClass defined for persistence.</description>
    </item>
    
    <item>
      <title>Manual Installation</title>
      <link>https://crunchydata.github.io/postgres-operator/latest/installation/manual-installation/</link>
      <pubDate>Thu, 26 Apr 2018 15:22:21 -0700</pubDate>
      
      <guid>https://crunchydata.github.io/postgres-operator/latest/installation/manual-installation/</guid>
      <description>Table of Contents Project Structure Installation Prerequsites Basic Installation Create HostPath Directory   Build Images &amp;amp; Deploy Makefile Targets Next Steps   Latest Release: 3.4.0 2018-11-14
 Project Structure First, define the following environment variables in .bashrc:
 export GOPATH=$HOME/odev export GOBIN=$GOPATH/bin export PATH=$PATH:$GOBIN export CO_NAMESPACE=demo export CO_CMD=kubectl export COROOT=$GOPATH/src/github.com/crunchydata/postgres-operator export CO_IMAGE_PREFIX=crunchydata export CO_BASEOS=centos7 export CO_VERSION=3.4.0 export CO_IMAGE_TAG=centos7-$CO_VERSION # for the pgo CLI auth export PGO_CA_CERT=$COROOT/conf/postgres-operator/server.crt export PGO_CLIENT_CERT=$COROOT/conf/postgres-operator/server.crt export PGO_CLIENT_KEY=$COROOT/conf/postgres-operator/server.</description>
    </item>
    
    <item>
      <title>Helm Chart</title>
      <link>https://crunchydata.github.io/postgres-operator/latest/installation/helm-chart/</link>
      <pubDate>Thu, 26 Apr 2018 15:24:16 -0700</pubDate>
      
      <guid>https://crunchydata.github.io/postgres-operator/latest/installation/helm-chart/</guid>
      <description>Latest Release: 3.4.0 2018-11-14
 Helm Chart First, pull prebuilt versions from Dockerhub of the postgres-operator containers, specify the image versions, and execute the following Makefile target -
 export CO_IMAGE_PREFIX=crunchydata export CO_IMAGE_TAG=centos7-3.4.0 make pull   Then, build and deploy the operator using the provided Helm chart -
 cd $COROOT/chart helm install ./postgres-operator helm ls     Next Steps Next, visit the Deployment page to deploy the Operator, verify the installation, and view various storage configurations.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://crunchydata.github.io/postgres-operator/latest/installation/configuration/</link>
      <pubDate>Tue, 24 Apr 2018 18:26:56 -0700</pubDate>
      
      <guid>https://crunchydata.github.io/postgres-operator/latest/installation/configuration/</guid>
      <description>Table of Contents Overview Openshift Container Platform Security Configuration Kube RBAC Basic Authentication Configure TLS pgo RBAC REST API Configuration PostgreSQL Operator Container Configuration   Bash Completion REST API Deploying pgPool Storage Configuration   Latest Release: 3.4.0 2018-11-14
 Overview This document describes how to configure the operator beyond the default configurations in addition to detailing what the configuration settings mean.
   Openshift Container Platform To run the Operator on Openshift Container Platform note the following requirements -</description>
    </item>
    
    <item>
      <title>Deployment</title>
      <link>https://crunchydata.github.io/postgres-operator/latest/installation/deployment/</link>
      <pubDate>Thu, 26 Apr 2018 15:26:40 -0700</pubDate>
      
      <guid>https://crunchydata.github.io/postgres-operator/latest/installation/deployment/</guid>
      <description>Table of Contents Verify Operator Status Configure pgo Client Verify pgo Client Next Steps   Latest Release: 3.4.0 2018-11-14
 This document details verifying the installation of the PostgreSQL Operator is successful, in addition to detailing some different storage configurations that can be made.
 Verify Operator Status To verify that the operator is deployed and running, run the following:
 kubectl get pod --selector=name=postgres-operator   You should see output similar to this:</description>
    </item>
    
    <item>
      <title>Upgrading the Operator</title>
      <link>https://crunchydata.github.io/postgres-operator/latest/installation/upgrading-the-operator/</link>
      <pubDate>Tue, 24 Apr 2018 18:27:30 -0700</pubDate>
      
      <guid>https://crunchydata.github.io/postgres-operator/latest/installation/upgrading-the-operator/</guid>
      <description>Latest Release: 3.4.0 2018-11-14
   Upgrading to v3.4     The conf/apiserver/ configuration files were moved into the conf/postgres-operator directory to consolidate all config files into a single location. You will need to perform this step manually start with version 3.4.0 if you are running an existing Operator version prior to 3.4.0. The Helm chart is also updated to reflect this change. Starting with 3.4.0 there is a secret, pgo-auth-secret that holds authentication and authorization files used by the operator to authenticate REST clients.</description>
    </item>
    
  </channel>
</rss>